@model KMGames.Web.ViewModel.Users.UserEditVm

@{
    ViewBag.Title = "Edit";
}

<h2>Edit user</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.RowVersion)
    @Html.HiddenFor(model => model.CreationDate)
    @Html.HiddenFor(model => model.DeprecatedEmail)

<div class="form-horizontal">
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DNI, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DNI, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.CreationDate, new { @class = "form-control", @disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CountryId, Model.Countries, "Select a country", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CityId, Model.Cities, "Select a city", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mt-3">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-sm btn-outline-success bg-success bg-opacity-10 col-1 me-2">
                <i class="fa fa-feather-alt"></i>
                Edit
            </button>
            <a class="btn btn-sm btn-outline-danger bg-danger bg-opacity-10 col-1" href="@Url.Action("Index","Users")">
                <i class="fa fa-undo"></i>
                Cancel
            </a>
        </div>
    </div>
</div>
}

@section scripts {

    <script>
        $(document).ready(function () {

            $("#CountryId").change(function () {
                $("#CityId").empty();
                $("#CityId").append('<option value="0" > Select a city </option>');


                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCities")',
                    dataType: 'json',
                    data: {
                        countryId: $("#CountryId").val()
                    },
                    success: function (cities) {
                        $.each(cities, function (i, city) {
                            $("#CityId").append('<option value= "' + city.CityId + '" > ' + city.Name + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error trying to charge cities.' + ex);
                    }
                });

                return false;
            });
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}